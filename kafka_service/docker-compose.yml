
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - postgres_service_postgres-net


#  kafka-kraft:
#    image: bashj79/kafka-kraft
#    ports:
#      - "9070:9092"
#    networks:
#      - postgres_service_postgres-net
#  kafka-1:
#    container_name: kafka-1
#    image: bitnami/kafka
#    ports:
#      - "9094:9094"
#      - "7073:7073"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: kafka-1
#      KAFKA_CFG_NODE_ID: 1
#      KAFKA_CFG_PROCESS_ROLES: controller,broker
#      KAFKA_CFG_LISTENERS: PLAINTEXT://:9095,CONTROLLER://:9093,EXTERNAL://:9094
#      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9095,EXTERNAL://${HOSTNAME:-localhost}:9094
#      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
#      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
#      KAFKA_CFG_INNER_BROKER_LISTENER_NAME: PLAINTEXT
##      JMX_PORT: 7072
#      KAFKA_OPTS: -javaagent:/opt/jmx_exporter/jmx_agent.jar=7073:/etc/jmx_exporter/jmx_config.yml
#    volumes:
#      - ./kafka/jmx_prometheus_javaagent-0.6.jar:/opt/jmx_exporter/jmx_agent.jar
#      - ./kafka/jmx_config.yml:/etc/jmx_exporter/jmx_config.yml
##      - kafka-data:/bitnami/kafka
#    networks:
#      - postgres_service_postgres-net

  kafka:
    container_name: kafka
#    image: bitnami/kafka
    build:
      context: kafka
    ports:
#      - "9094:9094"
      - "9092:9092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
#      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9999                    # Указываем JMX порт для Kafka
      KAFKA_JMX_OPTS: >                       # Параметры JMX
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Djava.rmi.server.hostname=kafka
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.port=9999
        -Dcom.sun.management.jmxremote.rmi.port=9999
    depends_on:
      - zookeeper
      #KAFKA_CFG_NODE_ID: 1
      #KAFKA_CFG_PROCESS_ROLES: controller,broker
      #KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      #KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://${HOSTNAME:-localhost}:9094
      #KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      #KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      #KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      #KAFKA_CFG_INNER_BROKER_LISTENER_NAME: PLAINTEXT
#      JMX_PORT: 1099
#      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=1099
#      EXTRA_ARGS: -javaagent:/opt/jmx_exporter/jmx_agent.jar=7070:/etc/jmx_exporter/jmx_config.yml
#    volumes:
#      - ./kafka/jmx_prometheus_javaagent-0.6.jar:/opt/jmx_exporter/jmx_agent.jar
#      - ./kafka/jmx_config.yml:/etc/jmx_exporter/jmx_config.yml
#      - kafka-data:/bitnami/kafka
    networks:
      - postgres_service_postgres-net
  jmx_exporter:
    image: sscaling/jmx-prometheus-exporter
    ports:
      - "8082:8080"        # Порт, по которому Prometheus будет забирать метрики
    environment:
      JMX_PORT: 9999       # JMX порт, на который будет подключаться jmx_exporter для метрик
    volumes:
      - ./kafka/jmx_config.yml:/config.yml
    command:
      - "-config.file=/config.yml"
    depends_on:
      - kafka

  kafka-exporter:
    build: kafka-exporter
    entrypoint: ["run.sh"]
    container_name: kafka-exporter
    ports:
      - "9308:9308"
    networks:
      - postgres_service_postgres-net
    command:
#      - --kafka.server=kafka-kraft:9070
      - --kafka.server=kafka:9092
    depends_on:
      - kafka

#  kafka1:
#    image: confluentinc/cp-kafka:6.2.1
#    hostname: kafka1
#    user: "appuser:appuser"
#    ports:
#      - "9089:9092"
#      - "9999:9999"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#      KAFKA_BROKER_ID: 1
#      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_JMX_PORT: 9999
#      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#      KAFKA_OPTS: -javaagent:/opt/jmx_exporter/jmx_agent.jar=7089:/etc/jmx_exporter/jmx_config.yml
#    depends_on:
#      - zookeeper
#    volumes:
#      - ./kafka/jmx_prometheus_javaagent-0.6.jar:/opt/jmx_exporter/jmx_agent.jar
#      - ./kafka/jmx_config.yml:/etc/jmx_exporter/jmx_config.yml

networks:
  postgres_service_postgres-net:
    external: true
# volumes:
#  kafka-data:
